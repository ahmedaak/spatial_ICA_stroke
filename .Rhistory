}
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
rs_hm
max(rs_hm)
mean(rs_hm)
mean(rs_hm$V1)
max(rs_hm$V1)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
matplot(1-rowMeans(roc_spec_all), rowMeans(roc_sens_all), type = "l", lwd = "2", lty = 2, add=TRUE, main = "Overall model performance")
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity")
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance")
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex = 1.4)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex = 3)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex = 20)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance")
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex.axis = 2)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex.axis = 2, cex.title = 2)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex.axis = 2, cex.main = 2)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex.axis = 2, cex.main = 2, cex.labels = 2)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex.axis = 2, cex.main = 2, cex.label = 2)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex.axis = 2, cex.main = 2, cex.x = 2)
matplot(1-roc_spec_all, roc_sens_all, type = "l", lwd = "2", lty = 1, col=rgb(0,0,1, alpha=0.05), xlab = "1 - specificity", ylab = "Sensitivity", main = "Overall model performance", cex.axis = 2, cex.main = 2, cex.lab = 2)
library(ggplot2)
radarchart <- radarchart(rbind(features_HIC, features_nonHIC), pcol = c("red", "red", "red", "blue", "blue", "blue"), plty = c(2, 1, 2, 2, 1, 2), pty = c(32, 16, 32, 32, 16, 32),  title = radar_title, plwd = c(2, 3, 2, 2, 3, 2), vlcex = 1, vlabels = c("Delay to whole-brain", "Delay to sinus", "0 - 0.01 Hz", "0.01 - 0.025 Hz", "0.025 - 0.05 Hz", "0.05 - 0.1 Hz", "0.1 - 0.15 Hz", "0.15 - 0.2 Hz", "VT occupancy", "Tmax delay"))
library(fmsb)
radarchart <- radarchart(rbind(features_HIC, features_nonHIC), pcol = c("red", "red", "red", "blue", "blue", "blue"), plty = c(2, 1, 2, 2, 1, 2), pty = c(32, 16, 32, 32, 16, 32),  title = radar_title, plwd = c(2, 3, 2, 2, 3, 2), vlcex = 1, vlabels = c("Delay to whole-brain", "Delay to sinus", "0 - 0.01 Hz", "0.01 - 0.025 Hz", "0.025 - 0.05 Hz", "0.05 - 0.1 Hz", "0.1 - 0.15 Hz", "0.15 - 0.2 Hz", "VT occupancy", "Tmax delay"))
ggsave(file="test.svg",plot=radarchart)
install.packages("svglite")
HFE_feats
HFE_full
HFE_full[HFE_full$HIC==1,]
all_hics <- HFE_full[HFE_full$HIC==1,]
View(all_hics)
knitr::opts_chunk$set(echo = TRUE)
# load necessary packages
library(fmsb)
library(glmnet)
library(irr) # needed to calculate Cohen's kappa
library(pROC)
library(kableExtra)
library(oro.nifti)
library(colorspace)
library(cowplot)
# raincloud plots
library(vioplot)
library(readr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(plyr)
library(RColorBrewer)
library(reshape2)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
epi_temp <- readNIfTI("../figures/figure2/AK_103_EPI_template_brain.nii.gz")
dwi_bl <- readNIfTI("../figures/supp_fig2/130/dwi2epiWarped.nii.gz")
tmax_bl <- readNIfTI("../figures/supp_fig2/130/Tmax_norm.nii.gz")
IC_bl <- intersect(list.files("../figures/supp_fig2/130/", pattern = "thresh_"), list.files("../figures/supp_fig2/130/", pattern = ".nii.gz$"))
# FOR THE LEFT PCA STROKE
for (f in c("epi_temp", "dwi_bl", "tmax_bl")){
# plot single slices
png(paste("../figures/supp_fig2/",f,"_PCA.png",sep=""))
if (f == "tmax_bl"){
image(get(f),  z = 48, plot.type = "single", zlim=c(1,150),col=jet.colors(7))}
else {
image(get(f),  z = 48, plot.type = "single")}
dev.off()
# plot mosaics
png(paste("../figures/supp_fig2/",f,"_mosaic.png",sep=""))
if (f == "tmax_bl"){
image(get(f), zlim=c(1,150),col=jet.colors(7))}
else {
image(get(f))}
dev.off()
}
for (g in c(IC_bl)){
# load in IC NIFTI
ic <- readNIfTI(paste("../figures/supp_fig2/130/",g,sep=""))
# plot single slice
png(paste("../figures/supp_fig2/130/",g,"_PCA.png",sep=""))
overlay(epi_temp, ifelse(ic > 0, ic, NA), z = 48, plot.type = "single", col.y=fire.colors(15), zlim.y=c(0,10))
dev.off()
# plot mosaic
png(paste("../figures/supp_fig2/130/",g,"_mosaic.png",sep=""))
overlay(epi_temp, ifelse(ic > 0, ic, NA), col.y=fire.colors(15), zlim.y=c(0,10))
dev.off()
}
# FOR THE RIGHT PICA STROKE
for (f in c("epi_temp", "dwi_bl", "tmax_bl")){
# plot single slices
png(paste("../figures/supp_fig2/",f,"_PICA.png",sep=""))
if (f == "tmax_bl"){
image(get(f),  z = 25, plot.type = "single", zlim=c(1,150),col=jet.colors(7))}
else {
image(get(f),  z = 25, plot.type = "single")}
dev.off()
}
for (g in c(IC_bl)){
# load in IC NIFTI
ic <- readNIfTI(paste("../figures/supp_fig2/130/",g,sep=""))
# plot single slice
png(paste("../figures/supp_fig2/130/",g,"_PICA.png",sep=""))
overlay(epi_temp, ifelse(ic > 0, ic, NA), z = 25, plot.type = "single", col.y=fire.colors(15), zlim.y=c(0,10))
dev.off()
}
all_hics
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
file_list
file_list <- read.csv2(file = "../copying_files_progress.xlsx", header = T, sep = ",")
file_list <- read.csv(file = "../copying_files_progress.xlsx", header = T, sep = ",")
file_list <- read.csv(file = "../copying_files_progress.csv", header = T, sep = ",")
file_list <- read.csv(file = "../copying_files_progress.csv", header = T, sep = ";")
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
file_list$Slice
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
hic_num <- file_list[file_list$subject==s,file_list$HIC]
hic_num <- file_list[file_list$subject==s,]
hic_num
hic_num <- file_list[file_list$subject==s,7]
hic_num
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
paste(data_path, "s", "dwi2epiWarped.nii.gz", sep = "/")
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
dwi
hic
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
cowplot(dwi_image)
plot_grid(dwi_image)
library(cowplot)
plot_grid(dwi_image)
?image
ortho2
library(scales)
orthographic(dwi)
orthographic.nifti(dwi)
orthographic(dwi,x = 2)
slice(dwi)
slice(dwi, z = slice)
test <- slice(dwi, z = slice)
plot_grid(test)
par(mfrow=(2,1))
par(mfrow=c(2,1))
slice(dwi, z = slice)
slice(dwi, z = slice)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
file_list
hic_num
hic
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
s
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
s
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
hic_num
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
install.packages("collage")
library(collage)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
library(oro.nifti)
library(neurobase)
robust_window()
image(robust_window(tmax, probs = c(0,0.7),  z = slice, plot.type = "single",zlim=c(0,130),col=jet.colors(7))
image(robust_window(tmax, probs = c(0,0.7)),  z = slice, plot.type = "single",zlim=c(0,130),col=jet.colors(7))
image(robust_window(tmax, probs = c(0,0.7)),  z = slice, plot.type = "single",col=jet.colors(7))
image(robust_window(tmax, probs = c(0,0.99)),  z = slice, plot.type = "single",col=jet.colors(7))
image(robust_window(tmax, probs = c(0,0.975)),  z = slice, plot.type = "single",col=jet.colors(7))
image(robust_window(tmax, probs = c(0,1)),  z = slice, plot.type = "single",col=jet.colors(7))
image(robust_window(tmax, probs = c(0,0.9)),  z = slice, plot.type = "single",col=jet.colors(7))
image(robust_window(tmax, probs = c(0,0.99)),  z = slice, plot.type = "single",col=jet.colors(7))
image(robust_window(tmax, probs = c(0,0.999)),  z = slice, plot.type = "single",col=jet.colors(7))
image(robust_window(tmax, probs = c(0.1,0.999)),  z = slice, plot.type = "single",col=jet.colors(7))
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
x <- y <- seq(-2*pi, 2*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
par(mfrow=c(1,2))
i1 <- image(z = z <- sin(r^2)*exp(-r/6), col  = gray((0:32)/32))
i2 <- image(z = z <- cos(r^42)*exp(-r/6), col  = gray((0:32)/32))
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
range(1,100,2)
range(1,2,100)
range(1,100)
c(1:10)
c(1:10,2)
c(1:10:2)
c(1:2:10)
c(1:3:10)
seq(1,100,2)
seq(4,100)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
traceback()
get(f)
slice(get(f), z = seq(10,110,2), col = jet.colors(7))
slice(get(f), z = seq(10,10,2), col = jet.colors(7))
slice(get(f), z = seq(10,100,2), col = jet.colors(7))
slice(get(f), z = seq(10,80,2), col = jet.colors(7))
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
?slice_overlay
slice-overlay(epi_temp, ifelse(ic > 0, ic, NA))
slice_overlay(epi_temp, ifelse(ic > 0, ic, NA))
dev.off()
slice_overlay(epi_temp, ifelse(ic > 0, ic, NA))
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
jet.colors()
jet.colors(1)
jet.colors(0)
jet.colors(1)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
colorbar()
colorbar(breaks=c(0,2,4))
colorbar(breaks=c(0,2,4), col = jet.colors(7))
image(robust_window(tmax, probs = c(0,0.99)),  z = slice, plot.type = "single",col=jet.colors(7))
colorbar(breaks=c(0,2,4), col = jet.colors(7))
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
g
hic_num
sub
i
g
IC_list
paste("thresh_zstat",hic_num,"_reg.nii.gz", sep="")
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
subs
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
g
unlist(strsplit(g, split="_reg",fixed=TRUE))
unlist(strsplit(g, split="_reg",fixed=TRUE))[1]
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
?slice_overlay
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
for (s in file_list$subject) {print(s)}
file_list$subject[33]
file_list$subject[34]
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/individual_IC_figures.R')
file_list$subject
file_list$subject
file_list[file_list$subject,]
file_list[file_list$subject==s,]
file_list[file_list$subject==s,]$
file_list <- read.csv(file = "../copying_files_progress.csv", header = T, sep = ";")
file_list[file_list$subject==s,]$FU=="Y"
file_list[file_list$subject==s,]$FU=="Y"
file_list$FU=="Y"
file_list[file_list$FU=="Y",]
file_list[!file_list$FU=="Y",]
file_list[!file_list$FU=="Y",]$subject
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
dev.off()
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
dev.off()
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
file_list[file_list$FU=="Y",]$subject
file_list[file_list$FU=="Y",]$subject[13]
file_list[file_list$FU=="Y",]$subject[14]
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/supp_all_pts_figs.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
file_list[!file_list$FU=="Y",]$subject==44
index(file_list[!file_list$FU=="Y",]$subject==44)
ind(file_list[!file_list$FU=="Y",]$subject==44)
?cv.glmnet()
library(glmnet)
?cv.glmnet()
citation(glmnet)
radarchart
?radarchart
??radarchart
citation(package = "irr")
citation(package = "pROC")
citation(package = "fmsb")
?exp()
coef_all
2^coef_all[1]
coef_all[1]
exp(coef_all[1])
2.718^coef_all[1]
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/montage.R')
HFE_full
file_list
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
hm
hm_mean <- mean(hm)
hm_mean <- mean(hm$X0)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
length(subs_all)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
match(s, subs_fn)
s
match(get(s), subs_fn)
match(s, subs_fn)
match(s, subs_all)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
match(s, subs_fn)==1
match(s, subs_fn)
s %in% subs_all
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
hm_mean_fn
hm_mean_all
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
plot(hm_mean_all)
dev.off()
plot(hm_mean_all)
points(hm_mean_fn, col = "red")
plot(hm_max_all)
points(hm_max_fn, col = "red")
hm_max_fn
plot(hm_max_all, hm_max_all)
plot(hm_mean_all, hm_max_all)
points(hm_max_fn,hm_mean_fn, col = "red")
plot(hm_max_fn,hm_mean_fn, col = "red")
points(hm_max_all,hm_mean_all)
plot(hm_max_fn,hm_mean_fn, col = "red", log = "xy")
points(hm_max_all,hm_mean_all)
plot(hm_max_fn,hm_mean_fn, col = "red", log = "xy", pch = 4)
points(hm_max_all,hm_mean_all, pch = 16)
plot(hm_max_fn,hm_mean_fn, col = "red", log = "xy", pch = 4, xlab = "Maximum framewise displacement (mm)", ylab = "Mean framewise displacement (mm)")
points(hm_max_all,hm_mean_all, pch = 16)
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
source('S:/AG/AG-CSB_NeuroRad2/khalila/PROJECTS/sICA_2019/analysis/plot_hm_all.R')
nrow(HFE_full_nonHIC)
nrow(HFE_full_HIC)
HFE_full
HFE_full_HIC
HFE_full_HIC_mean <- colMeans(HFE_full_HIC[,4:13],na.rm=T)
HFE_full_HIC_mean
HFE_full_nonHIC
table(HFE_full_HIC_mean)
colnames(HFE_full_HIC_mean)
HFE_full_HIC_mean
print(HFE_full_HIC_mean)
print(HFE_full_nonHIC_mean)
print(HFE_full_HIC_mean)
print(as.data.frame(HFE_full_HIC_mean))
IC_bl
hic_i
hic_num
knitr::opts_chunk$set(echo = TRUE)
# load necessary packages
library(fmsb)
library(glmnet)
library(irr) # needed to calculate Cohen's kappa
library(pROC)
library(kableExtra)
library(oro.nifti)
library(colorspace)
library(cowplot)
# raincloud plots
library(vioplot)
library(readr)
library(tidyr)
library(ggplot2)
library(Hmisc)
library(plyr)
library(RColorBrewer)
library(reshape2)
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
epi_temp <- readNIfTI("../figures/figure2/AK_103_EPI_template_brain.nii.gz")
dwi_bl <- readNIfTI("../figures/figure2/147/dwi2epiWarped.nii.gz")
dwi_fu <- readNIfTI("../figures/figure2/148/dwi2epiWarped.nii.gz")
tmax_bl <- readNIfTI("../figures/figure2/147/Tmax_sSVD_norm.nii.gz")
tmax_fu <- readNIfTI("../figures/figure2/148/Tmax_norm.nii.gz")
IC_bl <- intersect(list.files("../figures/figure2/147/", pattern = "thresh_"), list.files("../figures/figure2/147/", pattern = ".nii.gz$"))
IC_fu <- intersect(list.files("../figures/figure2/148/", pattern = "thresh_"), list.files("../figures/figure2/148/", pattern = ".nii.gz$"))
# define jet colormap
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
fire.colors <- colorRampPalette(c("#000000","#120056","#32009f","#6500d7","#8d00be","#ae0291","#c60854","#de2c23","#f25600","#fb7a00","#ff9900","#ffb700","#ffd400","#ffec33","#ffff90"))
for (f in c("epi_temp", "dwi_bl", "dwi_fu", "tmax_bl", "tmax_fu")){
# plot single slices
png(paste("../figures/figure2/",f,".png",sep=""))
if (f == "tmax_bl" | f == "tmax_fu"){
image(get(f),  z = 40, plot.type = "single", zlim=c(1,130),col=jet.colors(7))}
else {
image(get(f),  z = 40, plot.type = "single")}
dev.off()
# plot mosaics
png(paste("../figures/figure2/",f,"_mosaic.png",sep=""))
if (f == "tmax_bl" | f == "tmax_fu"){
image(get(f), zlim=c(1,130),col=jet.colors(7))}
else {
image(get(f))}
dev.off()
}
for (g in c(IC_bl)){
# load in IC NIFTI
ic <- readNIfTI(paste("../figures/figure2/147/",g,sep=""))
# plot single slice
png(paste("../figures/figure2/147/",g,".png",sep=""))
overlay(epi_temp, ifelse(ic > 0, ic, NA), z = 40, plot.type = "single", col.y=jet.colors(7), zlim.y=c(0,10))
dev.off()
# plot mosaic
png(paste("../figures/figure2/147/",g,"_mosaic.png",sep=""))
overlay(epi_temp, ifelse(ic > 0, ic, NA), col.y=jet.colors(7), zlim.y=c(0,10))
dev.off()
}
for (h in c(IC_fu)){
# load in IC NIFTI
ic <- readNIfTI(paste("../figures/figure2/148/",h,sep=""))
# plot single slice
png(paste("../figures/figure2/148/",h,".png",sep=""))
overlay(epi_temp, ifelse(ic > 0, ic, NA), z = 40, plot.type = "single", col.y=fire.colors(15), zlim.y=c(0,10))
dev.off()
# plot mosaic
png(paste("../figures/figure2/148/",h,"_mosaic.png",sep=""))
overlay(epi_temp, ifelse(ic > 0, ic, NA), col.y=fire.colors(15), zlim.y=c(0,10))
dev.off()
}
